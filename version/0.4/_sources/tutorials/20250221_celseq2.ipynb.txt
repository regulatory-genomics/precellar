{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e5b6d4ee",
   "metadata": {},
   "source": [
    "# Cel-Seq2\n",
    "\n",
    "CEL-Seq2 is an enhanced version of the CEL-Seq (Cell Expression by Linear amplification and Sequencing) protocol for single-cell RNA sequencing, as described in this [paper](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-0938-8). "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15dbbe09",
   "metadata": {},
   "source": [
    "The example datasets we used are from [SRR7588583](https://trace.ncbi.nlm.nih.gov/Traces/?view=run_browser&acc=SRR7588583&display=metadata), a widely used datasets in [benchmarking](https://pubmed.ncbi.nlm.nih.gov/31133762/)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0309f638",
   "metadata": {},
   "source": [
    "## SeqSpec"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8926160d",
   "metadata": {},
   "source": [
    "![celseq2](../assets/figure/celseq2.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d37885ed",
   "metadata": {},
   "source": [
    "Based on this library structure, we designate RA5 as the primer for read1 and RA3 as the primer for read2. It's important to note that both RA5 and RA3 should have their region_type set to custom_primer since they are non-standard primers rather than typical sequencing primers. This custom designation ensures proper handling of these unique primer sequences in the analysis pipeline."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b03977e5",
   "metadata": {},
   "source": [
    "```yaml\n",
    "sequence_spec:\n",
    "- !Read\n",
    "  read_id: R1\n",
    "  name: Read 1\n",
    "  modality: rna\n",
    "  primer_id: RA5\n",
    "  min_len: 1\n",
    "  max_len: 250\n",
    "  strand: pos\n",
    "  files: []\n",
    "- !Read\n",
    "  read_id: R2\n",
    "  name: Read 2\n",
    "  modality: rna\n",
    "  primer_id: RA3\n",
    "  min_len: 1\n",
    "  max_len: 250\n",
    "  strand: neg\n",
    "  files: []\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfb34d56",
   "metadata": {},
   "source": [
    "Another thing we should note is that the cell barcode whitelist of CelSeq2 study is various. In this experiment, we used barcodes downloaded [here](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE118767)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36da69af",
   "metadata": {},
   "source": [
    "## Precellar pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b9f2516b-4ad0-47fc-a764-f6ac181bd4b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0.3.0-dev0'"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import precellar\n",
    "precellar.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e92b7aa9-998f-493f-89ca-840161804981",
   "metadata": {},
   "outputs": [],
   "source": [
    "assay = precellar.Assay(\"seqspec_template/cel_seq2.yaml\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "27a63bd3-5460-4205-8da1-de82cc938e28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CEL-Seq2\n",
       "└── rna(132-326)\n",
       "    ├── illumina_p5(29)\n",
       "    ├── RA5(26) [↓R1(1-250)✗]\n",
       "    ├── umi(6)\n",
       "    ├── cell_bc(8)\n",
       "    ├── poly_T(30-98)\n",
       "    ├── cDNA(1-98)\n",
       "    ├── RA3(21) [↑R2(1-250)✗]\n",
       "    ├── link_1(12)\n",
       "    ├── sample_bc(6)\n",
       "    └── illumina_p7(24)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "assay"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8eb35c75",
   "metadata": {},
   "source": [
    "Let look at our fastq dataset to check whether it satisfy this seqspec."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "889c60cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "! zcat /data2/litian/precellar_data/PalateCEL/SRR7588583_1.fastq.gz | head"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12ad2ebf",
   "metadata": {},
   "source": [
    "```\n",
    "@SRR7588583.1 1 length=32\n",
    "AGAACNGCTCTGAANNNNNNNNNNNNNNNNNN\n",
    "+SRR7588583.1 1 length=32\n",
    "AAAAA#EEEEEEEE##################\n",
    "@SRR7588583.2 2 length=32\n",
    "GAGCGNAGTATCNNNNNNNNNNNNNNNNNNNN\n",
    "+SRR7588583.2 2 length=32\n",
    "AAAAA#EEEEAE####################\n",
    "@SRR7588583.3 3 length=32\n",
    "CGCCTNCCTTCTTNNNNNNNNNNNNNNNNNNN\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bfab40df",
   "metadata": {},
   "outputs": [],
   "source": [
    "! zcat  /data2/litian/precellar_data/PalateCEL/SRR7588583_2.fastq.gz | head"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29096b7e",
   "metadata": {},
   "source": [
    "```\n",
    "@SRR7588583.1 1 length=71\n",
    "NGGGGGGGGGGNGGGGGGGGGGGGGGGNGGGGGGNGGGGGGNGNNGGGGGGGGGGGGGGGGGNGGGGGGGG\n",
    "+SRR7588583.1 1 length=71\n",
    "#AAAAAEEEEE#EEEEE<EEEEEEEEE#AEEEEE#EEEEEE#E##<EEE<EEEE/EAEEE/<#EEEEEAEE\n",
    "@SRR7588583.2 2 length=71\n",
    "NTGGGTAGTGGNGAAGGACCGATATCAGAAAAATNCCTTCANGNNTACTAATTTATTAATAANCATTAGGT\n",
    "+SRR7588583.2 2 length=71\n",
    "#AAA/EEAEAE#EEEEEEEEE6EEEA<AEEE/EE#EEEEEA#/##EEEEEEEEE<EEAEEAE#A<EEA<AA\n",
    "@SRR7588583.3 3 length=72\n",
    "NACCCCTTCTGNCCCCTAGTAAGCCCAGTTGCTGNATCTGANCNNTTTGAGCTCTTTTTGTANTATACTCTA\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "471bc430",
   "metadata": {},
   "source": [
    "In read1, we observe a 14bp 'N' region following the 6bp UMI and 8bp barcode sequences. This is a specific characteristic of this dataset. To handle this, we set both min_len and max_len parameters of read1 to 14 to trim off the 'N' region."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cf400a2f-b011-47d5-b98d-9af62a1aaa66",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[2025-02-20T14:05:45Z \u001b[32mINFO\u001b[0m] Treating /data/litian/202502_precellar/data/barcode/CelSeq2_GSE117617_barcode.txt as local file\n",
      "[2025-02-20T14:05:45Z \u001b[33mWARN\u001b[0m] Read 'R1' has low percentage of matched records for region 'cell_bc'. Percentage of matched records: 46.50%\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 32\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 69\n",
      "Warning: Range end 70 exceeds sequence length 68\n"
     ]
    }
   ],
   "source": [
    "assay.update_read('R1', fastq='/data2/litian/precellar_data/PalateCEL/SRR7588583_1.fastq.gz',max_len=14,min_len = 14)\n",
    "assay.update_read('R2', fastq='/data2/litian/precellar_data/PalateCEL/SRR7588583_2.fastq.gz',min_len=20,max_len=70)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6116dd6a-15f2-44d2-bb15-3f6db0ca3d9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "star = precellar.aligners.STAR(\"/data/Public/STAR_reference/refdata-gex-GRCh38-2024-A/star/\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6a6b3952-7706-4ef4-8eb1-2c7e314631b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[2025-02-20T14:06:01Z \u001b[32mINFO\u001b[0m] Starting alignment process\n",
      "[2025-02-20T14:06:01Z \u001b[32mINFO\u001b[0m] Using provided Assay object\n",
      "[2025-02-20T14:06:01Z \u001b[32mINFO\u001b[0m] Using modality: RNA\n",
      "[2025-02-20T14:06:01Z \u001b[32mINFO\u001b[0m] Initialized aligner: STAR\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Initializing FastqProcessor with 32 threads and chunk size 10000000\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Adding mitochondrial DNA references: [\"chrM\", \"M\"]\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Generating alignments\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Using STAR aligner\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Counting barcodes...\n",
      "[2025-02-20T14:06:02Z \u001b[32mINFO\u001b[0m] Treating /data/litian/202502_precellar/data/barcode/CelSeq2_GSE117617_barcode.txt as local file\n",
      "[2025-02-20T14:06:33Z \u001b[32mINFO\u001b[0m] Aligning 68987831 reads...\n",
      "[2025-02-20T14:06:33Z \u001b[32mINFO\u001b[0m] Processing output type: gene_quantification\n",
      "[2025-02-20T14:06:33Z \u001b[32mINFO\u001b[0m] Starting gene quantification\n",
      "100%|██████████| 68987831/68987831 [04:51<00:00, 237060.47it/s][2025-02-20T14:11:56Z \u001b[32mINFO\u001b[0m] Completed gene quantification, writing to: \"20250220_celseq2_gene_matrix.h5ad\"\n",
      "[2025-02-20T14:11:56Z \u001b[32mINFO\u001b[0m] Alignment process completed in 354.95s\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{'frac_transcriptome': 0.5676187442391109,\n",
       " 'sequenced_reads': 68987831.0,\n",
       " 'frac_q30_bases_read2': 0.7711844695732999,\n",
       " 'frac_mitochondrial': 0.23238289177544943,\n",
       " 'frac_duplicates': 0.6476864987591802,\n",
       " 'frac_confidently_mapped': 0.7187557321625929,\n",
       " 'frac_q30_bases_barcode': 0.896682909193072,\n",
       " 'frac_unmapped': 0.14783096050353617,\n",
       " 'frac_valid_barcode': 0.8366271292106574,\n",
       " 'sequenced_read_pairs': 0.0}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precellar.align(\n",
    "    assay,\n",
    "    modality='rna',\n",
    "    aligner=star,\n",
    "    output='20250220_celseq2_gene_matrix.h5ad',\n",
    "    output_type='gene_quantification',\n",
    "    num_threads=32,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b598e301",
   "metadata": {},
   "source": [
    "## Downstream analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8b786cea-842d-4f5a-b57e-46b341cdde70",
   "metadata": {},
   "outputs": [],
   "source": [
    "import scanpy as sc\n",
    "import hdf5plugin # we have to import this package to read h5ad file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "c5e76fae-b183-4131-9611-830e65dc18de",
   "metadata": {},
   "outputs": [],
   "source": [
    "anndata = sc.read_h5ad(\"20250220_celseq2_gene_matrix.h5ad\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "59280240-9c3b-483c-bff0-cc510051a510",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 383 × 38606\n",
       "    obs: 'exon_count', 'intron_count', 'mitochondrial_count'\n",
       "    var: 'gene_name'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anndata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f438c917-8bf7-4a77-9989-12ad10da841b",
   "metadata": {},
   "outputs": [],
   "source": [
    "sc.pp.recipe_zheng17(anndata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a6438d10-6dde-4397-80b4-c568836f6aea",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/data/litian/micromamba/envs/py311/lib/python3.11/site-packages/scanpy/tools/_utils.py:41: UserWarning: You’re trying to run this on 999 dimensions of `.X`, if you really want this, set `use_rep='X'`.\n",
      "         Falling back to preprocessing with `sc.pp.pca` and default params.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "sc.pp.neighbors(anndata)\n",
    "sc.tl.umap(anndata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "977a24d6-0263-4d25-9f1c-8be1d4b5e24d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sc.pl.umap(anndata)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
